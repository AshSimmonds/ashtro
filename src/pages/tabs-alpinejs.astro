---
import Layout from "../layouts/Layout.astro"
---

<Layout title="tabs | alpinejs">
    <main>
        <h1>tabs</h1>

        This is a bit hacky but it works, using <a href="/alpine">AlpineJS</a>, it has this <code>conditional :class</code> stuff which isn't entirely good looking html/css so will cause the dreaded red squiggles through your code, but renders valid. Best to hide it away behind a component you can feed headings and content into.

        <hr>

        <div class="tab-wrapper w-80 mx-auto" x-data="{ activeTab:  0 }">
            <div class="flex">
                <label
                    x-on:click="activeTab = 0"
                    class="tab-control tab tab-lifted"
                    :class="{ 'tab-active': activeTab === 0 } "
                >
                    Tab 1
                </label>
                <label
                    x-on:click="activeTab = 1"
                    class="tab-control tab tab-lifted"
                    :class="{ 'tab-active': activeTab === 1 }"
                >
                    Tab 2
                </label>
                <label
                    x-on:click="activeTab = 2"
                    class="tab-control tab tab-lifted"
                    :class="{ 'tab-active': activeTab === 2 }"
                >
                    Tab 3
                </label>
            </div>

            <div class="tab-panel" x-show="activeTab === 0">
                <p>This is the example content of the first tab. Sadly it also displays the other tabs content until page is fully rendered.</p>
            </div>
            <div class="tab-panel" x-show="activeTab === 1">
                <p>TODO: make a proper component you can seed with stuff</p>
            </div>
            <div class="tab-panel" x-show="activeTab === 2">
                <p>Also you can't link directly to a tab I don't think, hmm.</p>
            </div>
        </div>
    </main>
</Layout>
